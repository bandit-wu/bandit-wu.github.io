(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{285:function(a,t,s){"use strict";s.r(t);var e=s(10),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"python"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[a._v("#")]),a._v(" Python")]),a._v(" "),t("p",[a._v("python是一门强大的，开发效率高的语言。具备跨平台的特点。简单易学。开放性拓展性强。")]),a._v(" "),t("h2",{attrs:{id:"python特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python特点"}},[a._v("#")]),a._v(" python特点")]),a._v(" "),t("ul",[t("li",[a._v("Python is powerful… and fast;")]),a._v(" "),t("li",[a._v("plays well with others;")]),a._v(" "),t("li",[a._v("runs everywhere;")]),a._v(" "),t("li",[a._v("is friendly & easy to learn;")]),a._v(" "),t("li",[a._v("is Open.")])]),a._v(" "),t("h2",{attrs:{id:"python应用范围"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python应用范围"}},[a._v("#")]),a._v(" python应用范围")]),a._v(" "),t("ul",[t("li",[a._v("游戏开发")]),a._v(" "),t("li",[a._v("网站开发")]),a._v(" "),t("li",[a._v("数据分析")]),a._v(" "),t("li",[a._v("深度学习")])]),a._v(" "),t("h2",{attrs:{id:"程序输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#程序输出"}},[a._v("#")]),a._v(" 程序输出")]),a._v(" "),t("h3",{attrs:{id:"操作系统和程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#操作系统和程序"}},[a._v("#")]),a._v(" 操作系统和程序")]),a._v(" "),t("p",[a._v("我们的电脑都会装上一个操作系统，我们会在操作系统上装上一些软件（比如QQ，微信等）。")]),a._v(" "),t("p",[a._v("我们口头都会说，我们打开了某某软件。这里的含义其实就是我在运行某个程序。")]),a._v(" "),t("p",[a._v("程序是运行在操作系统上面的，通过运行起来的程序，我们称之为 "),t("strong",[a._v("进程")]),a._v(" 。")]),a._v(" "),t("p",[a._v("我们可以把运行中的进程当成孤立的个体，一个黑盒子，也就是你不知道里面到底在干什么。")]),a._v(" "),t("p",[a._v("即使这个程序是你写的，在运行过程中，你也不一定知道在干什么，干到了哪一步，正在进入哪一段逻辑。")]),a._v(" "),t("p",[a._v("如果需要查看程序内部运行情况，需要程序内部向外告知，告知的方式其实就是输出日志。")]),a._v(" "),t("h3",{attrs:{id:"打印输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打印输出"}},[a._v("#")]),a._v(" 打印输出")]),a._v(" "),t("p",[a._v("程序可以通过"),t("code",[a._v("print")]),a._v("输出函数，将程序执行的数据输出到控制台")]),a._v(" "),t("div",{staticClass:"language-python extra-class"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hello python'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("!!!note\n"),t("code",[a._v("print()")]),a._v("是打印函数，括号内是要打印显示的内容.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("如果打印的是一句话，需要用`''`包起来，数字的话可以不用。\n")])])]),t("h2",{attrs:{id:"注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[a._v("#")]),a._v(" 注释")]),a._v(" "),t("h3",{attrs:{id:"单行注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[a._v("#")]),a._v(" 单行注释")]),a._v(" "),t("p",[a._v("单行注释以"),t("code",[a._v("#")]),a._v("开头,"),t("code",[a._v("#")]),a._v("后空一格, 后跟上注释的内容, 例如:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("linenums\n# 下面代码是给黑马无人小车打招呼\nprint('hello 黑马无人小车')\n")])])]),t("h3",{attrs:{id:"多行注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多行注释"}},[a._v("#")]),a._v(" 多行注释")]),a._v(" "),t("p",[a._v("如果注释内容比较多的话,可以使用多行注释")]),a._v(" "),t("p",[a._v("多行注释以"),t("code",[a._v("'''")]),a._v("开头,"),t("code",[a._v("'''")]),a._v("结尾,或者"),t("code",[a._v('"""')]),a._v("开头,"),t("code",[a._v('"""')]),a._v("结尾")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("linenums\n'''\n第一行代码是给黑马无人小车打招呼\n第二行代码是给传智播客打招呼\n'''\nprint('hello 黑马无人小车')\nprint('hello 传智播客')\n")])])]),t("h2",{attrs:{id:"运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[a._v("#")]),a._v(" 运算符")]),a._v(" "),t("h3",{attrs:{id:"加减乘除基本运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加减乘除基本运算"}},[a._v("#")]),a._v(" 加减乘除基本运算")]),a._v(" "),t("ol",[t("li",[a._v("加法")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print(1 + 1)\n")])])]),t("ol",[t("li",[a._v("减法")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print(3 - 1)\n")])])]),t("ol",[t("li",[a._v("乘法")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print(3 * 2)\n")])])]),t("ol",[t("li",[a._v("除法")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print(8 / 4)\n")])])]),t("ol",[t("li",[a._v("取余数")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print(7 % 2)\n")])])]),t("p",[a._v("!!!note\n加，减，乘，除，取余分别用"),t("code",[a._v("+")]),a._v(","),t("code",[a._v("-")]),a._v(","),t("code",[a._v("*")]),a._v(","),t("code",[a._v("/")]),a._v(","),t("code",[a._v("%")]),a._v("来表示")]),a._v(" "),t("h3",{attrs:{id:"混合运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#混合运算"}},[a._v("#")]),a._v(" 混合运算")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print((2 + 3) * 5)\nprint((5 - 3) * 2)\nprint((5 + 3) / 2)\nprint((5 + 3) * (2 + 1))\n")])])]),t("blockquote",[t("p",[a._v("混合运算时，括号具备优先级")])]),a._v(" "),t("h3",{attrs:{id:"特殊运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特殊运算符"}},[a._v("#")]),a._v(" 特殊运算符")]),a._v(" "),t("ol",[t("li",[a._v("求幂")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print(3 ** 2)\n")])])]),t("ol",[t("li",[a._v("整数除法")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("print(7 // 3)\n")])])]),t("blockquote",[t("p",[t("code",[a._v("**")]),a._v(" 取幂操作符，前面是数字，后面是幂")]),a._v(" "),t("p",[t("code",[a._v("//")]),a._v(" 是整数除，除出来的结果取整数")])]),a._v(" "),t("h2",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[a._v("#")]),a._v(" 变量")]),a._v(" "),t("p",[t("strong",[a._v("变量")]),a._v(" 是用来描述计算机中的 "),t("strong",[a._v("数据存储空间")]),a._v(" 的。")]),a._v(" "),t("p",[a._v("我们可以通过变量来保存定义的数据。")]),a._v(" "),t("h3",{attrs:{id:"变量的定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义"}},[a._v("#")]),a._v(" 变量的定义")]),a._v(" "),t("p",[a._v("规则： "),t("code",[a._v("变量名")]),a._v(" = "),t("code",[a._v("存储的值")])]),a._v(" "),t("p",[a._v("例如，我定义了一个变量age，用来存储一个数字：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("age = 18\nprint(age)\n")])])]),t("h3",{attrs:{id:"变量的命名规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量的命名规则"}},[a._v("#")]),a._v(" 变量的命名规则")]),a._v(" "),t("p",[a._v("变量名称遵循以下规则:")]),a._v(" "),t("ul",[t("li",[a._v("只能由数字,字母,_(下划线)组成")]),a._v(" "),t("li",[a._v("不能以数字开头")]),a._v(" "),t("li",[a._v("不能是关键字")]),a._v(" "),t("li",[a._v("区分大小写")])]),a._v(" "),t("p",[a._v("!!!tip\n关键字是只系统默认已经占用的词，编程人员不得以这些命名。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("python的关键字(33个)有：\n\n`and`, `as`, `assert`, `break`,\n`class`, `continue`, `def`, `del`,\n`elif`, `else`, `except`, `finally`,\n`for`, `from`, `global`, `if`,\n`import`, `in`, `is`, `lambda`,\n`nonlocal`, `not`, `or`, `pass`,\n`raise`, `return`, `try`, `while`,\n`with`, `yield`,\n`False`, `None`, `True`\n")])])]),t("p",[a._v("例如以下命名就是不合法的:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("itcast.cn = '你好'\n")])])]),t("p",[a._v("!!!warning\n名称中包含了"),t("code",[a._v(".")]),a._v("，是不合法的")]),a._v(" "),t("h3",{attrs:{id:"变量命名规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量命名规范"}},[a._v("#")]),a._v(" 变量命名规范")]),a._v(" "),t("p",[a._v("我们在编写python代码时， 通常采用下划线命名法:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("person_count = 100\n")])])]),t("p",[t("code",[a._v("person")]),a._v(" 和 "),t("code",[a._v("count")]),a._v("是不同的两个单词，命名时希望包含组合意思。\n我们采用"),t("code",[a._v("_")]),a._v("进行连接。这是我们推荐的方式。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("当然也可以采用`personCount`或者`PersonCount`这两种方式命名(小驼峰和大驼峰命名法)，\n但是不推荐。\n\n以后会用到别人的api，例如Qt的api，使用的就是驼峰命名，主要是为了保证跨语言api相同。\n")])])]),t("h3",{attrs:{id:"常见的数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的数据类型"}},[a._v("#")]),a._v(" 常见的数据类型")]),a._v(" "),t("h4",{attrs:{id:"整数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整数"}},[a._v("#")]),a._v(" 整数")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("age = 10\n")])])]),t("h4",{attrs:{id:"浮点数-小数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浮点数-小数"}},[a._v("#")]),a._v(" 浮点数(小数)")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("age = 10.5\n")])])]),t("h4",{attrs:{id:"布尔类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型"}},[a._v("#")]),a._v(" 布尔类型")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("is_ok = True\n")])])]),t("h4",{attrs:{id:"字符串类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串类型"}},[a._v("#")]),a._v(" 字符串类型")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name = '传智播客'\n")])])]),t("h3",{attrs:{id:"一些案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些案例"}},[a._v("#")]),a._v(" 一些案例")]),a._v(" "),t("h4",{attrs:{id:"多变量赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多变量赋值"}},[a._v("#")]),a._v(" 多变量赋值")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("name, age, gender = '黑马王子', 10, True\n")])])]),t("p",[a._v("!!!note\npython可以同时为多个变量赋值")]),a._v(" "),t("h4",{attrs:{id:"变量运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量运算"}},[a._v("#")]),a._v(" 变量运算")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\nage = 10\nage = age + 5\nprint(age)\n")])])]),t("p",[a._v("或者")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\nage = 10\nage += 5\nprint(age)\n")])])]),t("p",[a._v("!!!note\n变量是数字类型时，是可以直接参与运算的。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("`+=`: 在自身的基础上 **加上** 一个值\n\n`-=`: 在自身的基础上 **减去** 一个值\n\n`*=`: 在自身的基础上 **乘以** 一个值\n\n`/=`: 在自身的基础上 **除以** 一个值\n")])])]),t("h2",{attrs:{id:"列表定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表定义"}},[a._v("#")]),a._v(" 列表定义")]),a._v(" "),t("p",[a._v("列表是一个序列(sequence),我们可以理解为一个装数据的容器。")]),a._v(" "),t("p",[a._v("Python中，列表使用频率很频繁。可以以存储一串数据，存储的每一个数据，我们称之为 "),t("strong",[a._v("元素")]),a._v(" 。")]),a._v(" "),t("p",[a._v("列表的类型为"),t("code",[a._v("list")]),a._v(", 用一对"),t("code",[a._v("[]")]),a._v(" 表示")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nprint(names)\nprint(type(names))\n")])])]),t("h3",{attrs:{id:"列表长度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表长度"}},[a._v("#")]),a._v(" 列表长度")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nprint(len(names))\n")])])]),t("p",[a._v("通过"),t("code",[a._v("len")]),a._v("函数获得列表的长度")]),a._v(" "),t("h3",{attrs:{id:"访问元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问元素"}},[a._v("#")]),a._v(" 访问元素")]),a._v(" "),t("p",[a._v("通过下标进行访问, "),t("strong",[a._v("列表下标从0开始")]),a._v(" "),t("img",{attrs:{src:"https://xiaokaijun.gitee.io/2022/01/12/winter-02-python/py_1.png",alt:"img"}})]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nprint(names[0])\nprint(names[1])\nprint(names[2])\nprint(names[-1])\n")])])]),t("p",[a._v("!!!note\n通过下标进行访问元素，下标从0开始。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("下标也可以为负数，为 **当前下标减去列表长度**\n\n超出长度，会有异常\n")])])]),t("h3",{attrs:{id:"增加元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加元素"}},[a._v("#")]),a._v(" 增加元素")]),a._v(" "),t("p",[a._v("通过"),t("code",[a._v("append")]),a._v("函数添加元素")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nnames.append('czxy')\nprint(names)\n")])])]),t("p",[a._v("通过"),t("code",[a._v("insert")]),a._v("函数插入指定位置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nnames.insert(1, 'czxy')\nprint(names)\n")])])]),t("h3",{attrs:{id:"删除元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除元素"}},[a._v("#")]),a._v(" 删除元素")]),a._v(" "),t("p",[a._v("通过"),t("code",[a._v("remove")]),a._v("函数移除指定元素")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nnames.remove('bxg')\nprint(names)\n")])])]),t("p",[a._v("通过"),t("code",[a._v("del")]),a._v("函数移除指定下标")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\ndel names[1]\nprint(names)\n")])])]),t("h3",{attrs:{id:"修改元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改元素"}},[a._v("#")]),a._v(" 修改元素")]),a._v(" "),t("p",[a._v("通过索引来修改元素")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nnames[1] = 'czxy'\nprint(names)\n")])])]),t("h3",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),t("p",[a._v("通过元素获得下标索引")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nindex = names.index('itheima')\nprint(index)\n")])])]),t("h3",{attrs:{id:"反转"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反转"}},[a._v("#")]),a._v(" 反转")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nnames.reverse()\nprint(names)\n")])])]),t("h3",{attrs:{id:"排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[a._v("#")]),a._v(" 排序")]),a._v(" "),t("p",[a._v("升序")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nnames.sort()\nprint(names)\n")])])]),t("p",[a._v("降序")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nnames.sort(reverse=True)\nprint(names)\n")])])]),t("h2",{attrs:{id:"元组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元组"}},[a._v("#")]),a._v(" 元组")]),a._v(" "),t("p",[a._v("Python的元组与列表类似，也是容器的一种,不同之处在于元组的元素 "),t("strong",[a._v("不能修改")])]),a._v(" "),t("p",[a._v("元组的类型为"),t("code",[a._v("tuple")]),a._v(", 用一对"),t("code",[a._v("()")]),a._v(" 表示，中间用"),t("code",[a._v(",")]),a._v("分隔")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ('itcast', 'itheima', 'bxg')\nprint(names)\nprint(type(names))\n")])])]),t("h3",{attrs:{id:"定义注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义注意"}},[a._v("#")]),a._v(" 定义注意")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ('itcast')\n")])])]),t("p",[a._v("!!!error\n以上是错误的元组定义.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ('itcast', )\nnames = ('itcast', 'itheima')\n")])])]),t("p",[a._v("!!!success\n以上是元组的正确定义.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("如果定义的元组中只有一个元素，后面要跟一个`,`\n")])])]),t("h3",{attrs:{id:"组包解包交换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组包解包交换"}},[a._v("#")]),a._v(" 组包解包交换")]),a._v(" "),t("h4",{attrs:{id:"元组具备自动组包功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元组具备自动组包功能"}},[a._v("#")]),a._v(" 元组具备自动组包功能")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = 'itcast', 'itheima', 'bxg'\nprint(names)\nprint(type(names))\n")])])]),t("p",[a._v("!!!note\nnames的类型是元组类型,这就是元组的自动组包特征")]),a._v(" "),t("h4",{attrs:{id:"元组具备自动解包功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元组具备自动解包功能"}},[a._v("#")]),a._v(" 元组具备自动解包功能")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ('itcast', 'itheima', 'bxg')\nname1, name2, name3 = names\nprint(name1)\nprint(name2)\nprint(name3)\n")])])]),t("h4",{attrs:{id:"元组具备数据交互功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元组具备数据交互功能"}},[a._v("#")]),a._v(" 元组具备数据交互功能")]),a._v(" "),t("p",[a._v("传统的数据交换:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('a = 10\nb = 5\ntmp = a\na = b\nb = tmp\nprint("a = {}, b = {}".format(a, b))\n')])])]),t("p",[a._v("元组数据交换:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('a = 10\nb = 5\na, b = b, a\nprint("a = {}, b = {}".format(a, b))\n')])])]),t("h3",{attrs:{id:"类比列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类比列表"}},[a._v("#")]),a._v(" 类比列表")]),a._v(" "),t("h4",{attrs:{id:"访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问"}},[a._v("#")]),a._v(" 访问")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ('itcast', 'itheima', 'bxg')\nprint(names[0])\n")])])]),t("h4",{attrs:{id:"索引-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引-2"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ('itcast', 'itheima', 'bxg')\nindex = names.index('itheima')\nprint(index)\n")])])]),t("h4",{attrs:{id:"添加-删除-修改-排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加-删除-修改-排序"}},[a._v("#")]),a._v(" 添加，删除，修改，排序")]),a._v(" "),t("p",[a._v("tuple是只读的数据类型。因此，不可以做任何修改操作。")]),a._v(" "),t("p",[a._v("!!!error\ntuple不具备修改的能力。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(" 添加，删除，修改，排序等功能是不存在的。\n")])])]),t("h2",{attrs:{id:"切片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切片"}},[a._v("#")]),a._v(" 切片")]),a._v(" "),t("p",[a._v("切片，英文单词为"),t("code",[a._v("slicing")]),a._v("。")]),a._v(" "),t("p",[a._v("python中，用来取列表(list),元组(tuple),字符串(str)部分元素的操作。")]),a._v(" "),t("h3",{attrs:{id:"切片的格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切片的格式"}},[a._v("#")]),a._v(" 切片的格式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("data[start:end:step]\n")])])]),t("p",[a._v("!!!note\n"),t("code",[a._v("data")]),a._v(" 为 list或者tuple或者str。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("`start` 为 开始索引\n\n`end` 为结束索引\n\n`step` 为步长\n\n**包含开始索引，不包含结束索引**\n")])])]),t("h3",{attrs:{id:"获取部分元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取部分元素"}},[a._v("#")]),a._v(" 获取部分元素")]),a._v(" "),t("p",[a._v("需求： 获取列表前3个元素.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\nnums = [0, 1, 2, 3, 4, 5, 6]\nprint(nums[0:3:1])\n")])])]),t("p",[a._v("如果步长为1，可以省略")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\nnums = [0, 1, 2, 3, 4, 5, 6]\n# 省略步长\nprint(nums[0:3:])\n# 或者完全省略\nprint(nums[0:3])\n")])])]),t("p",[a._v("如果开始索引为0，可以省略")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\nnums = [0, 1, 2, 3, 4, 5, 6]\nprint(nums[0:3])\nprint(nums[:3])\n")])])]),t("p",[a._v("如果为末尾结束，可以省略结尾索引")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("nums = [0, 1, 2, 3, 4, 5, 6]\n# 获取从索引2开始\nprint(nums[0:3])\nprint(nums[:3])\n")])])]),t("h3",{attrs:{id:"索引正序和倒序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引正序和倒序"}},[a._v("#")]),a._v(" 索引正序和倒序")]),a._v(" "),t("p",[a._v("索引分为正序和倒序， 正序自左至右，从0开始；倒序自右至左，从-1开始。\n"),t("img",{attrs:{src:"https://xiaokaijun.gitee.io/2022/01/12/winter-02-python/py_3.png",alt:"img"}})]),a._v(" "),t("p",[a._v("需求： 获取列表前3个元素.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\nnums = [0, 1, 2, 3, 4, 5, 6]\n# 方式一\nprint(nums[0:3])\n# 方式二 \nprint(nums[0:-4])\n")])])]),t("h3",{attrs:{id:"步长为负数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步长为负数"}},[a._v("#")]),a._v(" 步长为负数")]),a._v(" "),t("p",[a._v("步长为负数时，代表反向切片.")]),a._v(" "),t("p",[a._v("需求： 获取列表中从下标为2开始的3个元素，要求倒序输出.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("nums = [0, 1, 2, 3, 4, 5, 6]\nprint(nums[4:1:-1])\n")])])]),t("h2",{attrs:{id:"集合set"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集合set"}},[a._v("#")]),a._v(" 集合set")]),a._v(" "),t("p",[a._v("Python的集合与列表类似，也是容器的一种,不同之处在于:")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("列表是有序的")]),a._v(" , "),t("strong",[a._v("集合是无序的")]),a._v("。")]),a._v(" "),t("li",[t("strong",[a._v("列表的元素可以重复")]),a._v(", "),t("strong",[a._v("集合的元素不可以重复")])])]),a._v(" "),t("p",[a._v("集合的类型为"),t("code",[a._v("set")]),a._v(", 用一对"),t("code",[a._v("{}")]),a._v(" 表示，中间用"),t("code",[a._v(",")]),a._v("分隔")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = {'itcast', 'itheima', 'bxg'}\nprint(names)\nprint(type(names))\n")])])]),t("h3",{attrs:{id:"集合长度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集合长度"}},[a._v("#")]),a._v(" 集合长度")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = {'itcast', 'itheima', 'bxg'}\nprint(len(names))\n")])])]),t("p",[a._v("通过"),t("code",[a._v("len")]),a._v("函数获得列表的长度")]),a._v(" "),t("h3",{attrs:{id:"添加元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加元素"}},[a._v("#")]),a._v(" 添加元素")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = {'itcast', 'itheima', 'bxg'}\nnames.add('czxy')\nprint(names)\n")])])]),t("h3",{attrs:{id:"删除元素-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除元素-2"}},[a._v("#")]),a._v(" 删除元素")]),a._v(" "),t("p",[a._v("删除指定元素, 没有时报错")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = {'itcast', 'itheima', 'bxg'}\nnames.remove('itheima')\nprint(names)\n")])])]),t("p",[a._v("删除指定元素, 没有时不做任何操作，不报错")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = {'itcast', 'itheima', 'bxg'}\nnames.discard('itheima')\nprint(names)\n")])])]),t("p",[a._v("随机删除元素")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = {'itcast', 'itheima', 'bxg'}\nnames.pop()\nprint(names)\n")])])]),t("h2",{attrs:{id:"字典"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[a._v("#")]),a._v(" 字典")]),a._v(" "),t("p",[a._v("字典(dictionary) 和列表从功能角度而言，都是一个装数据的容器.")]),a._v(" "),t("ul",[t("li",[a._v("字典可以存储多个数据。")]),a._v(" "),t("li",[a._v("字典采用 "),t("strong",[a._v("键值对")]),a._v(" 方式存储数据")]),a._v(" "),t("li",[a._v("字典没有索引，是无序的")]),a._v(" "),t("li",[a._v("字典的键是唯一的")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://xiaokaijun.gitee.io/2022/01/12/winter-02-python/py_4.png",alt:"img"}})]),a._v(" "),t("p",[a._v("字典的类型为’dict’, 用一对’{}’包裹， 每一组元素采用"),t("code",[a._v(",")]),a._v("分隔，一组元素包含"),t("code",[a._v("key")]),a._v("和"),t("code",[a._v("value")]),a._v(","),t("code",[a._v("key")]),a._v("和"),t("code",[a._v("value")]),a._v("采用"),t("code",[a._v(":")]),a._v(" 分隔。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nprint(d)\nprint(type(d))\n")])])]),t("h3",{attrs:{id:"字典长度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字典长度"}},[a._v("#")]),a._v(" 字典长度")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nprint(len(d))\n")])])]),t("p",[a._v("通过"),t("code",[a._v("len")]),a._v("函数获得字典元素的数量")]),a._v(" "),t("h3",{attrs:{id:"访问元素-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#访问元素-2"}},[a._v("#")]),a._v(" 访问元素")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nprint(d['name'])\n")])])]),t("h3",{attrs:{id:"增加和修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加和修改"}},[a._v("#")]),a._v(" 增加和修改")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nd['name'] = 'itheima'\nd['address'] = 'sz'\nprint(d)\n")])])]),t("p",[a._v("!!!note\n不存在key就是添加。存在就是修改")]),a._v(" "),t("h3",{attrs:{id:"删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除"}},[a._v("#")]),a._v(" 删除")]),a._v(" "),t("h4",{attrs:{id:"del删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#del删除"}},[a._v("#")]),a._v(" del删除")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\ndel d['name']\nprint(d)\n")])])]),t("h4",{attrs:{id:"pop删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pop删除"}},[a._v("#")]),a._v(" pop删除")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nvalue = d.pop('name')\nprint(d)\nprint(value)\n")])])]),t("p",[a._v("pop删除时会将删除元素的value返回")]),a._v(" "),t("h4",{attrs:{id:"clear清空"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#clear清空"}},[a._v("#")]),a._v(" clear清空")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nd.clear()\nprint(d)\n")])])]),t("h3",{attrs:{id:"复杂数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复杂数据结构"}},[a._v("#")]),a._v(" 复杂数据结构")]),a._v(" "),t("p",[a._v("字典可以描述复杂的数据结构.")]),a._v(" "),t("p",[a._v("例如，我们描述一个学生可以这个样子:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("stu = {'name': 'itcast', 'age': 10, 'gender': True}\n")])])]),t("p",[a._v("我们描述多个个学生，用学生的名字做唯一标识")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("stus = {\n    'itcast': {'age': 10, 'gender': True},\n    'itheima': {'age': 12, 'gender': True},\n    'bxg': {'age': 14, 'gender': False},\n}\n")])])]),t("h2",{attrs:{id:"条件判断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件判断"}},[a._v("#")]),a._v(" 条件判断")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://xiaokaijun.gitee.io/2022/01/12/winter-02-python/py_5.png",alt:"img"}})]),a._v(" "),t("h3",{attrs:{id:"if语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[a._v("#")]),a._v(" if语句")]),a._v(" "),t("p",[a._v("代码格式:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("if 条件:\n    条件成立时，要做的事情\n")])])]),t("p",[a._v("示例：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("if 1 < 2:\n    print(\"1 < 2\")\nprint('hello')\n")])])]),t("h3",{attrs:{id:"if-else-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-else-语句"}},[a._v("#")]),a._v(" if…else…语句")]),a._v(" "),t("p",[a._v("代码格式:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("if 条件:\n    条件成立时，要做的事情\nelse:\n    条件不成立时，要做的事情\n")])])]),t("p",[a._v("示例：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('if 1 < 2:\n    print("ok")\nelse:\n    print("not ok")\n')])])]),t("h3",{attrs:{id:"if-elif-else语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-elif-else语句"}},[a._v("#")]),a._v(" if…elif…else语句")]),a._v(" "),t("p",[a._v("代码格式:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("if 条件1:\n    条件1成立时，要做的事情\nelif 条件2:\n    条件2成立时，要做的事情\nelif 条件3:\n    条件3成立时，要做的事情\nelse:\n    以上条件都不满足时，要做的事情\n")])])]),t("p",[a._v("示例：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('if 1 > 2:\n    print("logic if")\nelif 1 > 3:\n    print("logic elif")\nelse:\n    print("logic else")\n')])])]),t("h3",{attrs:{id:"一些案例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些案例-2"}},[a._v("#")]),a._v(" 一些案例")]),a._v(" "),t("h4",{attrs:{id:"input输入函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#input输入函数"}},[a._v("#")]),a._v(" input输入函数")]),a._v(" "),t("p",[t("code",[a._v("input")]),a._v("函数，可以帮助我们的程序接收外部提供的数据，一个阻塞式的代码")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("age = input('请输入年龄')\nprint(age)\n")])])]),t("h4",{attrs:{id:"if-else案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-else案例"}},[a._v("#")]),a._v(" if…else案例")]),a._v(" "),t("p",[a._v("需求:")]),a._v(" "),t("ol",[t("li",[a._v("输入用户年龄")]),a._v(" "),t("li",[a._v("判断是否满 18 岁 （>=）")]),a._v(" "),t("li",[a._v("如果满 18 岁，允许进网吧嗨皮")]),a._v(" "),t("li",[a._v("如果未满 18 岁，提示回家写作业")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("age = int(input('请输入你的年纪:'))\n# if判断\nif age>=18:\n    print('允许进网吧嗨皮')\nelse:\n    print('回家写作业')\n")])])]),t("h4",{attrs:{id:"if-elif-else案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-elif-else案例"}},[a._v("#")]),a._v(" if…elif…else案例")]),a._v(" "),t("p",[a._v("需求:\n需求")]),a._v(" "),t("ol",[t("li",[a._v("定义 holiday 字符串变量记录节日名称")]),a._v(" "),t("li",[a._v("如果是 情人节 应该 买玫瑰／看电影")]),a._v(" "),t("li",[a._v("如果是 平安夜 应该 买苹果／吃大餐")]),a._v(" "),t("li",[a._v("如果是 生日 应该 买蛋糕")]),a._v(" "),t("li",[a._v("其他的日子每天都是节日啊……")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("holiday = input('请输入节日名称')\nif holiday == '情人节':\n    print('买玫瑰/看电影')\nelif holiday == '平安夜':\n    print('买苹果/吃大餐')\nelif holiday == '生日':\n    print('买蛋糕')\nelse:\n    print('每天都是节日,每天一个红包')\n")])])]),t("h4",{attrs:{id:"嵌套案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嵌套案例"}},[a._v("#")]),a._v(" 嵌套案例")]),a._v(" "),t("p",[a._v("需求:")]),a._v(" "),t("ol",[t("li",[a._v("定义布尔型变量 has_ticket 表示是否有车票")]),a._v(" "),t("li",[a._v("定义整型变量 knife_length 表示刀的长度，单位：厘米")]),a._v(" "),t("li",[a._v("首先检查是否有车票，如果有，才允许进行 安检")]),a._v(" "),t("li",[a._v("安检时，需要检查刀的长度，判断是否超过 20 厘米\n果超过 20 厘米，提示刀的长度，不允许上车\n如果不超过 20 厘米，安检通过")]),a._v(" "),t("li",[a._v("如果没有车票，不允许进门")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('has_ticket = input("请输入是否有车票:")\n# 0 没有 1 有\nhas_ticket = int(has_ticket)\nknife_length = input("请输入刀的长度:")\nknife_length = int(knife_length)\n\nif bool(has_ticket):\n    if knife_length>20:\n        print("不能进站")\n    else:\n        print("可以进站")\nelse:\n    print("不能进站")\n')])])]),t("h3",{attrs:{id:"in和not-int"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#in和not-int"}},[a._v("#")]),a._v(" in和not int")]),a._v(" "),t("p",[t("code",[a._v("in")]),a._v("和"),t("code",[a._v("not int")]),a._v("是python的操作符，用来判断元素释放在容器中，如果在，返回True，否则False。")]),a._v(" "),t("p",[a._v("这里的容器包含了我们前面学习的"),t("code",[a._v("列表list")]),a._v(","),t("code",[a._v("元组tuple")]),a._v(","),t("code",[a._v("集合set")]),a._v(","),t("code",[a._v("字典set")]),a._v("以及"),t("code",[a._v("字符串str")])]),a._v(" "),t("h4",{attrs:{id:"字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[a._v("#")]),a._v(" 字符串")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("str = 'itcast'\nprint('it' in str)\n")])])]),t("h4",{attrs:{id:"列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[a._v("#")]),a._v(" 列表")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nprint('itheima' in names)\n")])])]),t("h4",{attrs:{id:"元组-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元组-2"}},[a._v("#")]),a._v(" 元组")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ('itcast', 'itheima', 'bxg')\nprint('itheima' in names)\n")])])]),t("h4",{attrs:{id:"集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[a._v("#")]),a._v(" 集合")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = {'itcast', 'itheima', 'bxg'}\nprint('itheima' in names)\n")])])]),t("h4",{attrs:{id:"字典-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字典-2"}},[a._v("#")]),a._v(" 字典")]),a._v(" "),t("p",[a._v("字典中，in 和 not in主要用来判断 字典的键")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nprint('name' in d)\nprint('age' in d)\n")])])]),t("h2",{attrs:{id:"while循环语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#while循环语法"}},[a._v("#")]),a._v(" while循环语法")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("while 条件:\n    循环逻辑代码\n")])])]),t("h3",{attrs:{id:"死循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#死循环"}},[a._v("#")]),a._v(" 死循环")]),a._v(" "),t("p",[a._v("死循环在程序中有一定的使用场景,可以保证程序不会停止。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("import time\n\nwhile True:\n    print('hello itcast')\n    time.sleep(1)\n")])])]),t("p",[a._v("!!!note\n"),t("code",[a._v("time")]),a._v("是python系统内置的模块，提供时间操作相关的api。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("`time.sleep`可以帮助睡眠\n")])])]),t("h3",{attrs:{id:"循环变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#循环变量"}},[a._v("#")]),a._v(" 循环变量")]),a._v(" "),t("p",[a._v("可以通过变量来控制循环")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 1.定义循环变量\ni = 0\n# 2.使用while判断条件\nwhile i < 10000:\n    # 要重复执行的代码\n    print('媳妇儿,我错了')\n    # 3.修改循环变量\n    i += 1\n")])])]),t("h3",{attrs:{id:"break和contiune"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#break和contiune"}},[a._v("#")]),a._v(" break和contiune")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("break")]),a._v(": 某一条件满足时，不再执行循环体中后续重复的代码，并退出循环。")]),a._v(" "),t("li",[t("code",[a._v("continue")]),a._v(": 某一条件满足时，不再执行本次循环体中后续重复的代码，但进入下一次循环判断.")])]),a._v(" "),t("p",[a._v("break示例:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("i = 0\nwhile i < 5:\n    if i == 3:\n        break # 5后面的数据都不会输出\n    print(i)\n    i += 1\n")])])]),t("p",[a._v("contiune示例:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("i = 0\nwhile i < 5:\n    i += 1\n    if i-1 == 3:\n        continue # 除了3都会输出\n    print(i-1)\n")])])]),t("h3",{attrs:{id:"嵌套循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嵌套循环"}},[a._v("#")]),a._v(" 嵌套循环")]),a._v(" "),t("p",[a._v("while 里面还有 while")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("while 条件1:\n    ......\n    while 条件2：\n        ......\n    ......\n")])])]),t("p",[a._v("示例代码:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 外层循环\ni = 0\nwhile i < 5:\n    # 内层循环\n    j = 0\n    while j<3:\n        print(j)\n        j+=1\n    i += 1\n")])])]),t("h2",{attrs:{id:"for循环语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for循环语法"}},[a._v("#")]),a._v(" for循环语法")]),a._v(" "),t("p",[a._v("for循环的主要作用是遍历数据(容器)中的元素 字符串、列表等高级数据类型都属于容器,都可以通过for循环遍历.")]),a._v(" "),t("p",[a._v("for循环的语法格式如下:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("for 临时变量 in 列表或者字符串等可迭代对象:\n    执行的代码\n")])])]),t("h3",{attrs:{id:"遍历操纵"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历操纵"}},[a._v("#")]),a._v(" 遍历操纵")]),a._v(" "),t("h4",{attrs:{id:"字符串-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串-2"}},[a._v("#")]),a._v(" 字符串")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("str = 'itheima'\n# ele普通变量  接收容器中的元素\nfor ele in str:\n    print(ele)\n")])])]),t("h4",{attrs:{id:"遍历列表元组集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历列表元组集合"}},[a._v("#")]),a._v(" 遍历列表元组集合")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("names = ['itcast', 'itheima', 'bxg']\nfor name in names:\n    print(name)\n")])])]),t("h4",{attrs:{id:"遍历字典"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历字典"}},[a._v("#")]),a._v(" 遍历字典")]),a._v(" "),t("p",[a._v("字典遍历过程中，获得的是字典的键.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("d = {'name': 'itcast', 'age': 10, 'height': 1.75, 'gender': True}\nfor key in d:\n    print(\"key = {}, value = {}\".format(key, d[key]))\n")])])]),t("h3",{attrs:{id:"range区间"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#range区间"}},[a._v("#")]),a._v(" range区间")]),a._v(" "),t("p",[t("code",[a._v("range")]),a._v("是一个内置的函数，可以自动帮我们创建 "),t("strong",[a._v("整数列表")]),a._v(".")]),a._v(" "),t("p",[a._v("语法格式为:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("range(start, end, step)\n")])])]),t("p",[a._v("!!!note")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("* `start`为起始值\n* `end`为结束值\n* `step`为步长\n\n\n意思为，创建一个从`start`开始，间隔`step`,一直到`end`结束的列表\n\n**包含start，不包含end**\narr = range(1, 10, 2)\nprint(arr)\n")])])]),t("h4",{attrs:{id:"步长为1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步长为1"}},[a._v("#")]),a._v(" 步长为1")]),a._v(" "),t("p",[a._v("步长为1时，可以省略")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("arr = range(1, 10)\nprint(arr)\n")])])]),t("h4",{attrs:{id:"起始值为0-步长为1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#起始值为0-步长为1"}},[a._v("#")]),a._v(" 起始值为0，步长为1")]),a._v(" "),t("p",[a._v("起始值为0，步长为1，起始值可以省略，步长也可以省略")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("arr = range(10)\nprint(arr)\n")])])]),t("h4",{attrs:{id:"遍历range"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遍历range"}},[a._v("#")]),a._v(" 遍历range")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("for num in range(0, 10, 2):\n    print(num)\n")])])]),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),t("p",[a._v("函数是程序非常重要的组成部分,是计算机执行命令的单元.")]),a._v(" "),t("p",[a._v("所谓函数，就是把 具有独立功能的代码块 组织为一个整体，在需要的时候 调用.")]),a._v(" "),t("p",[a._v("使用函数可以提高编写的效率以及 "),t("strong",[a._v("代码的重用")]),a._v(".")]),a._v(" "),t("p",[a._v("函数的使用包含两个部分:")]),a._v(" "),t("ul",[t("li",[a._v("定义函数: 在函数中编写代码，实现功能")]),a._v(" "),t("li",[a._v("调用函数: 执行编写的代码")])]),a._v(" "),t("h3",{attrs:{id:"函数定义格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数定义格式"}},[a._v("#")]),a._v(" 函数定义格式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("def 函数名():\n    函数封装的代码\n")])])]),t("p",[a._v("!!!note\n"),t("code",[a._v("def")]),a._v("时英文"),t("code",[a._v("define")]),a._v("的缩写，意为声明")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("`函数名`是根据自己的业务来取的，和变量命名规则相同。\n")])])]),t("h3",{attrs:{id:"函数调用格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数调用格式"}},[a._v("#")]),a._v(" 函数调用格式")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("函数名()\n")])])]),t("h3",{attrs:{id:"第一个函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一个函数"}},[a._v("#")]),a._v(" 第一个函数")]),a._v(" "),t("p",[a._v("需求:")]),a._v(" "),t("ol",[t("li",[a._v("编写一个打招呼 say_hello 的函数，封装三行打招呼的代码")]),a._v(" "),t("li",[a._v("在函数下方调用打招呼的代码")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 定义函数\ndef say_hello():\n    print('hello itcast')\n    print('hello itheima')\n    print('hello bxg')\n\n# 调用函数\nsay_hello()\n")])])]),t("h3",{attrs:{id:"函数的参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[a._v("#")]),a._v(" 函数的参数")]),a._v(" "),t("p",[a._v("函数的参数，可以传递数据给函数内部 参数的作用是增加函数的 通用性.")]),a._v(" "),t("p",[a._v("定义和调用格式:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 定义函数\ndef 函数名(参数1,参数2):\n    函数代码\n\n# 调用函数\n函数名(参数1,参数2)\n")])])]),t("p",[a._v("需求:")]),a._v(" "),t("ul",[t("li",[a._v("定义函数,传递a和b,求a+b的和")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("def sum(a,b):\n    result = a + b\n    print(result)\n\n# 调用\nsum(10,20)\n")])])]),t("h3",{attrs:{id:"函数返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数返回值"}},[a._v("#")]),a._v(" 函数返回值")]),a._v(" "),t("p",[a._v("定义和调用格式:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 定义函数\ndef 函数名(参数1,参数2):\n    函数代码\n    return 返回值\n\n# 调用函数\n返回值 = 函数名(参数1,参数2)\n")])])]),t("p",[a._v("需求:")]),a._v(" "),t("ul",[t("li",[a._v("定义函数返回两个数最大值")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 定义函数\ndef max_value(a,b):\n    if a > b:\n        return a\n    else:\n        return b\n\n# 调用函数\nv = max_value(10,20)\n")])])]),t("h4",{attrs:{id:"多返回值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多返回值"}},[a._v("#")]),a._v(" 多返回值")]),a._v(" "),t("p",[a._v("python函数可以返回多个结果")]),a._v(" "),t("p",[a._v("需求:")]),a._v(" "),t("ul",[t("li",[a._v("计算两个数的加和减")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("def cacl(a, b):\n    sum = a + b\n    result = a-b\n    return sum,result\n")])])]),t("h3",{attrs:{id:"局部变量和全局变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局部变量和全局变量"}},[a._v("#")]),a._v(" 局部变量和全局变量")]),a._v(" "),t("h4",{attrs:{id:"局部变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局部变量"}},[a._v("#")]),a._v(" 局部变量")]),a._v(" "),t("ul",[t("li",[a._v("局部变量,指的是在函数内部定义的变量")]),a._v(" "),t("li",[a._v("局部变量的目的是存储需要临时保存的数据")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("def func1():\n    # 局部变量\n    b = 20\n    print('hello %d' % b)\n")])])]),t("h4",{attrs:{id:"全局变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[a._v("#")]),a._v(" 全局变量")]),a._v(" "),t("ul",[t("li",[a._v("全局变量是在整个py文件中声明，全局范围内都可以访问")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 全局变量\nm = 10\nn = 20\n\ndef func():\n    # 函数内访问全局变量\n    print(m)\n")])])]),t("h4",{attrs:{id:"函数内修改全局变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数内修改全局变量"}},[a._v("#")]),a._v(" 函数内修改全局变量")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 定义全局变量\nm = 10\n\ndef func():\n    # 使用global声明全局变量\n    global m\n    # 将m修改成20\n    m = 30\n    print('函数内部m = %d' % m)\n")])])]),t("h3",{attrs:{id:"函数注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数注释"}},[a._v("#")]),a._v(" 函数注释")]),a._v(" "),t("p",[a._v("函数名并不能完全的表示出函数的含义,定义函数的时候就需要给函数加上注释")]),a._v(" "),t("p",[a._v("函数的注释就是文档注释")]),a._v(" "),t("p",[a._v("注释的规则和格式如下:")]),a._v(" "),t("ul",[t("li",[a._v("注释应该定义在函数的下方")]),a._v(" "),t("li",[a._v("使用三对引号注释")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("def say_hello():\n    '''\n    说hello的函数\n    :return:\n    '''\n    print('hello itcast')\n")])])]),t("h2",{attrs:{id:"类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[a._v("#")]),a._v(" 类")]),a._v(" "),t("h3",{attrs:{id:"类的定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的定义"}},[a._v("#")]),a._v(" 类的定义")]),a._v(" "),t("ul",[t("li",[a._v("属性(变量)")]),a._v(" "),t("li",[a._v("函数")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("class MyClass:\n    def __init__(self):\n        self.name = 'itcast'\n    \n    def say_hello(self):\n        print('hello')\n")])])]),t("p",[a._v("!!!note\n"),t("code",[a._v("class")]),a._v("为关键字，用来声明一个类")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("`__init__`是构造函数，构造函数也是函数，是一个具体实例对象创建时默认调用的函数。\n\n`self`表示当前创建实例对象本身\n\n类中的函数，有个特点，默认第一个参数都是`self`\n")])])]),t("h3",{attrs:{id:"对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[a._v("#")]),a._v(" 对象")]),a._v(" "),t("ul",[t("li",[a._v("类是一种模板模型")]),a._v(" "),t("li",[a._v("对象是这个类的具体实现")])]),a._v(" "),t("p",[a._v("!!!tip\n狗和旺财，哪一个是类？哪一个是对象？")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("狗是一种类型，属于模板\n\n旺财是狗的实现，属于具体的，具体的就是对象\n")])])]),t("h3",{attrs:{id:"类的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的使用"}},[a._v("#")]),a._v(" 类的使用")]),a._v(" "),t("p",[a._v("类的使用，其实就是将类具体化，获得对象，然后使用对象的属性和方法")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("class Car:\n    def __init__(self):\n        self.speed = 10\n        self.x = 0\n\n    def move(self):\n        self.x += self.speed\n")])])]),t("p",[a._v("!!!note\n"),t("code",[a._v("self.speed")]),a._v("是属性，用来记录数据的")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("`self.x`是属性，用来记录数据的 \n\n`move`是函数，是一种行为，行为的变化会产生数据的变化\n\n整个对象，其实就是维护状态数据的。\n")])])]),t("h3",{attrs:{id:"面向对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象"}},[a._v("#")]),a._v(" 面向对象")]),a._v(" "),t("p",[a._v("提到面向对象，就不得不提到面向过程。\n面向对象和面向过程其实都是一种编程思想, 就是解决问题的思路。")]),a._v(" "),t("h4",{attrs:{id:"面向过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向过程"}},[a._v("#")]),a._v(" 面向过程")]),a._v(" "),t("p",[a._v("面向过程, 全称POP(Process Oriented Programming)。")]),a._v(" "),t("ul",[t("li",[a._v("面向过程强调的是过程")]),a._v(" "),t("li",[a._v("完成这个过程是，站在单一执行者的角度去完成这个过程")])]),a._v(" "),t("p",[a._v("例如：中午想吃西红柿炒鸡蛋怎么办呢?\n如果用面向过程的思维，可以分解为一下过程:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("第一步，到超市买西红柿和鸡蛋\n第二步，把西红柿洗干净切好\n第三步，把鸡蛋炒好\n第四步，把西红柿炒好\n第五步，把鸡蛋和西红柿混在一起炒好\n第六步，把炒好西红柿炒蛋端出来\n")])])]),t("h4",{attrs:{id:"面向对象-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象-2"}},[a._v("#")]),a._v(" 面向对象")]),a._v(" "),t("p",[a._v("面向对象，全称OOP(Object Oriented Programming)")]),a._v(" "),t("ul",[t("li",[a._v("面向对象不再关注具体的过程细节")]),a._v(" "),t("li",[a._v("面向对象注重的是关系管理和调度")])]),a._v(" "),t("p",[a._v("同样是西红柿炒鸡蛋，面向对象会这么做:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("采购员去超市采购\n洗菜员负责洗菜\n切菜员负责切成\n厨师负责烹饪\n上菜员负责上菜\n")])])]),t("p",[a._v("每一条都很模糊，但是每一条也明确了要干什么，面向对象就是将这些角色的调度做好。")]),a._v(" "),t("h4",{attrs:{id:"探讨"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#探讨"}},[a._v("#")]),a._v(" 探讨")]),a._v(" "),t("p",[a._v("如果以西红柿炒蛋为例，面向过程的做法，类似于一个小老板开了一个小餐厅，前前后后都由自己打点。")]),a._v(" "),t("p",[a._v("而面向对象的做法，类似于一个连锁饭店，分工明确，可复制性比较强。")]),a._v(" "),t("p",[a._v("其实我们的编程是面向过程和面向对象的叠加。调度管理部分我们采用的是面向对象，细节流程部分采用的是面向过程。")]),a._v(" "),t("p",[a._v("例如：西红柿炒鸡蛋")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("采购员去超市采购\n    采购员怎么采购？具体化的流程，1，2，3...\n洗菜员负责洗菜\n    洗菜员怎么洗菜？具体化的流程，1，2，3...\n切菜员负责切成\n    切菜员怎么切菜？具体化的流程，1，2，3...\n厨师负责烹饪\n    厨师怎么烹饪？具体化的流程，1，2，3...\n上菜员负责上菜\n    上菜员怎么上菜？具体化的流程，1，2，3...\n")])])]),t("h2",{attrs:{id:"继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[a._v("#")]),a._v(" 继承")]),a._v(" "),t("p",[a._v("继承指的是一个对象直接使用另一个对象的属性或方法")]),a._v(" "),t("p",[a._v("继承的格式: class 子类名(父类名): …")]),a._v(" "),t("h3",{attrs:{id:"继承定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承定义"}},[a._v("#")]),a._v(" 继承定义")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 父类\nclass Person:\n\n    def __init__(self):\n        # 构造，初始化属性\n        self.name = 'itcast'\n        self.age = 20\n\n    def say_hello(self):\n        print('hello {}'.format(self.name))\n\n# 子类\nclass Student(Person):\n    pass\n\n\nif __name__ == '__main__':\n    stu = Student()\n\n    print(stu.name)\n    print(stu.age)\n\n    stu.say_hello()\n")])])]),t("p",[a._v("!!!note\n子类继承父类属性和方法")]),a._v(" "),t("h3",{attrs:{id:"构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[a._v("#")]),a._v(" 构造函数")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\n# 父类\nclass Person:\n\n    def __init__(self, name, age):\n        # 构造，初始化属性\n        self.name = name\n        self.age = age\n\n    def say_hello(self):\n        print('hello {}'.format(self.name))\n\n\n# 子类\nclass Student(Person):\n    pass\n\nif __name__ == '__main__':\n    stu = Student('itheima', 30)\n\n    print(stu.name)\n    print(stu.age)\n\n    stu.say_hello()\n")])])]),t("p",[a._v("!!!note\n父类中如果构造改变，子类实例需要传入对应的参数。")]),a._v(" "),t("h3",{attrs:{id:"子类覆写构造"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子类覆写构造"}},[a._v("#")]),a._v(" 子类覆写构造")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("hl_lines\n# 父类\nclass Person:\n\n    def __init__(self, name, age):\n        # 构造，初始化属性\n        self.name = name\n        self.age = age\n\n    def say_hello(self):\n        print('hello {}'.format(self.name))\n\n\n# 子类\nclass Student(Person):\n\n    def __init__(self, name, age, id):\n        # 需要去加载父类的构造\n        super(Student, self).__init__(name, age)\n        self.id = id\n\n\nif __name__ == '__main__':\n    stu = Student('itheima', 30, '110')\n\n    print(stu.name)\n    print(stu.age)\n    print(stu.id)\n\n    stu.say_hello()\n")])])]),t("p",[a._v("!!! note\n由于业务功能原因，如果子类需要覆写父类的构造，那么：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("* 定义自己的`__init__`构造函数\n* 在自己的`__init__`中加载父类的构造，见18行\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);